{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jhosk\\\\OneDrive\\\\Escritorio\\\\Henry\\\\Projectos\\\\Project Weather\\\\src\\\\src\\\\components\\\\City.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./City.css\"; //creo el componente funcional City que mostrará los detalles de una ciudad\n//recibida por props en la ruta /ciudad/{ciudadId}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function City() {\n  _s();\n\n  const {\n    ciudadId\n  } = useParams();\n  const [infoCity, setInfoCity] = useState();\n  fetch(`https://api.openweathermap.org/data/2.5/weather?id=${ciudadId}&appid=4ae2636d8dfbdc3044bede63951a019b`).then(respuesta => respuesta.json()).then(info => {\n    console.log(info);\n    const objetoCiudad = {\n      name: info.name,\n      temp: info.main.temp,\n      weather: info.weather[0].main,\n      wind: info.wind.speed,\n      clouds: info.clouds.all,\n      latitud: info.coord.lat,\n      longitud: info.coord.lon\n    };\n    setInfoCity(objetoCiudad);\n  });\n\n  if (!infoCity) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hp-100 p-5 bg-dark rounded-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: infoCity.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Temperatura: \", infoCity.temp]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Clima: \", infoCity.weather]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Viento: \", infoCity.wind]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Cantidad de nubes: \", infoCity.clouds]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Latitud: \", infoCity.latitud, \"\\xBA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Longitud: \", infoCity.longitud, \"\\xBA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this);\n  }\n}\n\n_s(City, \"eAUKz0ho2atyks4YJNT/pvXJ0oY=\", false, function () {\n  return [useParams];\n});\n\n_c = City;\n\nvar _c;\n\n$RefreshReg$(_c, \"City\");","map":{"version":3,"sources":["C:/Users/Jhosk/OneDrive/Escritorio/Henry/Projectos/Project Weather/src/src/components/City.jsx"],"names":["React","useState","useParams","City","ciudadId","infoCity","setInfoCity","fetch","then","respuesta","json","info","console","log","objetoCiudad","name","temp","main","weather","wind","speed","clouds","all","latitud","coord","lat","longitud","lon"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,YAAP,C,CACA;AACA;;;AACA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAE1B,QAAM;AAAEC,IAAAA;AAAF,MAAeF,SAAS,EAA9B;AACA,QAAK,CAACG,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAvC;AAEAM,EAAAA,KAAK,CAAE,sDAAqDH,QAAS,yCAAhE,CAAL,CACKI,IADL,CACWC,SAAD,IAAeA,SAAS,CAACC,IAAV,EADzB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACI,UAAMG,YAAY,GAAE;AAChBC,MAAAA,IAAI,EAAEJ,IAAI,CAACI,IADK;AAEhBC,MAAAA,IAAI,EAAEL,IAAI,CAACM,IAAL,CAAUD,IAFA;AAGhBE,MAAAA,OAAO,EAAEP,IAAI,CAACO,OAAL,CAAa,CAAb,EAAgBD,IAHT;AAIhBE,MAAAA,IAAI,EAAER,IAAI,CAACQ,IAAL,CAAUC,KAJA;AAKhBC,MAAAA,MAAM,EAAEV,IAAI,CAACU,MAAL,CAAYC,GALJ;AAMhBC,MAAAA,OAAO,EAAEZ,IAAI,CAACa,KAAL,CAAWC,GANJ;AAOhBC,MAAAA,QAAQ,EAAEf,IAAI,CAACa,KAAL,CAAWG;AAPL,KAApB;AASArB,IAAAA,WAAW,CAACQ,YAAD,CAAX;AACP,GAdL;;AAeA,MAAI,CAACT,QAAL,EAAc;AACN,wBACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GANL,MAMS;AACD,wBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,kCACA;AAAA,sBAAKA,QAAQ,CAACU;AAAd;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,oCACI;AAAA,0CAAmBV,QAAQ,CAACW,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,oCAAaX,QAAQ,CAACa,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,qCAAcb,QAAQ,CAACc,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,gDAAyBd,QAAQ,CAACgB,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA,sCAAehB,QAAQ,CAACkB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA,uCAAgBlB,QAAQ,CAACqB,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADD;AAiBH;AACR;;GA7CuBvB,I;UAECD,S;;;KAFDC,I","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./City.css\"\r\n//creo el componente funcional City que mostrará los detalles de una ciudad\r\n//recibida por props en la ruta /ciudad/{ciudadId}\r\nexport default function City(){\r\n\r\n    const { ciudadId } = useParams();\r\n    const[infoCity, setInfoCity] = useState();\r\n\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?id=${ciudadId}&appid=4ae2636d8dfbdc3044bede63951a019b`)\r\n        .then((respuesta) => respuesta.json())\r\n        .then((info) => {\r\n            console.log(info)\r\n                const objetoCiudad ={\r\n                    name: info.name,\r\n                    temp: info.main.temp,\r\n                    weather: info.weather[0].main,\r\n                    wind: info.wind.speed,\r\n                    clouds: info.clouds.all,\r\n                    latitud: info.coord.lat,\r\n                    longitud: info.coord.lon\r\n                }\r\n                setInfoCity(objetoCiudad)\r\n        })\r\n    if (!infoCity){\r\n            return(\r\n                <div>\r\n                    <p>Cargando...</p>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n             <div className=\"container\">\r\n                <div className=\"col-md-4\">\r\n                <div className=\"hp-100 p-5 bg-dark rounded-3\">\r\n                <h2>{infoCity.name}</h2>\r\n                <div>\r\n                    <div>Temperatura: {infoCity.temp}</div>\r\n                    <div>Clima: {infoCity.weather}</div>\r\n                    <div>Viento: {infoCity.wind}</div>\r\n                    <div>Cantidad de nubes: {infoCity.clouds}</div>\r\n                    <div>Latitud: {infoCity.latitud}º</div>\r\n                    <div>Longitud: {infoCity.longitud}º</div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n}"]},"metadata":{},"sourceType":"module"}